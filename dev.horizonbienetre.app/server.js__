const express = require("express");
const cors = require("cors");
const dotenv = require("dotenv");
const path = require("path");
const fs = require("fs");
const { console } = require("inspector");

const rawEnv = process.env.NODE_ENV;
const NODE_ENV = rawEnv ? rawEnv.trim() : "";

if (typeof PhusionPassenger !== "undefined") {
    PhusionPassenger.configure({ autoInstall: false });
}

const envFilePath =
    NODE_ENV === "production"
        ? path.resolve(__dirname, ".env.production")
        : path.resolve(__dirname, ".env.development");
dotenv.config({ path: envFilePath });

const app = express();
const PORT = process.env.PORT || 3000;

app.use(
    cors({
        origin: process.env.FRONTEND_URL || "http://localhost:5173",
        methods: "GET,POST,PUT,DELETE",
        allowedHeaders: "Content-Type,Authorization",
    })
);

app.use(express.json());

const frontendDistPath = path.resolve(
    __dirname,
    "dist"
);

console.log(
    `‚úÖ frontendDistPath : ${frontendDistPath}`
);

const indexPath = path.join(frontendDistPath, "index.html");

// üëâ Servir le frontend build√© si SERVE_REACT est activ√©
if (process.env.SERVE_REACT === "true") {
    // V√©rifier si le dossier de build existe
    if (fs.existsSync(frontendDistPath)) {
        app.use(express.static(frontendDistPath));
        console.log(`‚úÖ Frontend React servi depuis : ${frontendDistPath}`);
    } else {
        console.warn(
            "‚ö†Ô∏è Le dossier dist est introuvable. Assurez-vous d'avoir ex√©cut√© `npm run build` pour le frontend."
        );
    }
} else {
    console.log("üõë React n'est pas servi par Express en mode d√©veloppement.");
}

app.get("/api/hello", (req, res) => {
    res.json({ hello: "‚úÖ backend /api/hello" });
});

app.get("/api/user", (req, res) => {
    const fakeUser = {
        id: 1,
        name: "Jean Dupont",
        email: "jean.dupont@example.com",
    };
    res.json(fakeUser);
});

app.get("/api/test", (req, res) => {
    res.json({
        test: `‚úÖ backend /api/hello - frontendDistPath, ${frontendDistPath}`,
    });
});

if (process.env.SERVE_REACT === "true") {
    app.get("/{*splat}", async (req, res) => {
        res.sendFile(indexPath, (err) => {
            if (err) {
                console.error(
                    "Erreur lors de l'envoi du fichier index.html :",
                    err
                );
                res.status(500).send(
                    "Erreur serveur lors du chargement de la page."
                );
            }
        });
    });
} else {
    app.get("/{*splat}", async (req, res) => {
        res.send("Route non trouv√©e : /{*splat}");
    });
}

// D√©marrage du serveur
if (typeof PhusionPassenger !== "undefined") {
    app.listen("passenger");
    console.log(`‚úÖ Serveur backend d√©marr√© sur PhusionPassenger`);
} else {
    const PORT = process.env.PORT || 3000;
    app.listen(PORT, () => {
        console.log(`‚úÖ Serveur backend d√©marr√© sur http://localhost:${PORT}`);
    });
}
